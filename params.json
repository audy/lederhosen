{"name":"Lederhosen","body":"<img src=\"http://d.pr/i/26Js+#.png\" align=\"right\">\r\n\r\n# Lederhosen\r\n\r\nLederhosen is a set of tools for OTU clustering rRNA amplicons using Robert Edgar's USEARCH.\r\n\r\nIt handles quality control of raw sequence data, running USEARCH, and creating and filtering tables.\r\n\r\nLederhosen is not a pipeline but rather a set of tools broken up into tasks. Tasks are invoked by running `lederhosen TASK ...`.\r\n\r\nLederhosen is designed with the following \"pipeline\" in mind:\r\n\r\n1. Quality control of sequence data.\r\n2. Clustering sequences to centroid or reference sequences (read: database)\r\n3. Generating tables from USEARCH output.\r\n4. Filtering tables to remove small or insignificant OTUs.\r\n\r\n### About\r\n\r\n- Lederhosen is a project born out of the Triplett Lab at the University of Florida.\r\n- Lederhosen is designed to be a fast and simple method of clustering 16S rRNA amplicons sequenced\r\nusing paired and non-paired end short reads such as those produced by Illumina (GAIIx, HiSeq and MiSeq).\r\n- Lederhosen uses [Semantic Versioning](http://semver.org/).\r\n- Lederhosen is free and open source under the [MIT open source license](http://opensource.org/licenses/mit-license.php/).\r\n- Except for USEARCH which requires a license, Lederhosen is available for commercial use.\r\n\r\n### Features\r\n\r\n- Sequence trimming (paired-end Illumina).\r\n- Parallel, referenced-based clustering to TaxCollector using USEARCH.\r\n- Queue-agnostic support for running jobs on clusters.\r\n- Support for RDP, TaxCollector or GreenGenes databases.\r\n- Generation and filtering of OTU abundancy matrices.\r\n\r\n### Installation\r\n\r\n0. Obtain & Install [USEARCH](http://www.drive5.com/) (32bit is fine for non-commercial use)\r\n2. Get a database:\r\n  - [TaxCollector](http://github.com/audy/taxcollector)\r\n  - [GreenGenes](http://greengenes.lbl.gov) 16S database\r\n  - File an [issue report](https://github.com/audy/lederhosen/issues) or pull request ;) to request support for a different database.\r\n3. Install Lederhosen by typing:\r\n\r\n    `sudo gem install lederhosen`\r\n4. Check installation by typing `lederhosen`. You should see some help text.\r\n\r\n## Tasks\r\n\r\nLederhosen is invoked by typing `lederhosen [TASK]`\r\n\r\n### Trim Reads\r\n\r\nTrim (Illumina, QSEQ format) reads using quality scores. Output will be a directory of fasta files. Reads can optionally be gzipped.\r\n\r\n    lederhosen trim --reads_dir=reads/*.txt --out_dir=trimmed/\r\n\r\nThe trimming process will reverse complement the \"right\" pair so that both reads are in the forward orientation.\r\n\r\nYou can also trim interleaved, paired-end FASTQ files:\r\n\r\n    lederhosen trim --reads_dir=reads/*.fastq --out_dir=trimmed/ read-type='fastq'\r\n\r\nLederhosen will also trim off adapter sequences from the 5' end of the \"left\" read with the `--left-trim` option.\r\n\r\n    lederhosen trim --reads_dir=reads/*.fastq --out_dir=trimed/ --read-type='fastq' --left-trim=11\r\n\r\n### Create Database\r\n\r\nCreate UDB database required by usearch from TaxCollector\r\n\r\n```bash\r\nlederhosen make_udb \\\r\n  --input=taxcollector.fa \\\r\n  --output=taxcollector.udb\r\n```\r\n\r\n(not actually required but will make batch searching a lot faster)\r\n\r\n### Cluster Reads using USEARCH\r\n\r\nCluster reads using USEARCH. Output is a uc file.\r\n\r\n```bash\r\nlederhosen cluster \\\r\n  --input=trimmed/*.fasta \\\r\n  --identity=0.95 \\\r\n  --output=clusters_95.uc \\\r\n  --database=taxcollector.udb\r\n```\r\n\r\nThe optional `--dry-run` parameter outputs the usearch command to standard out. This is useful if you want to run usearch on a cluster.\r\n\r\n### Generate OTU table(s)\r\n\r\nCreate an OTU abundance table where rows are samples and columns are clusters. The entries are the number of reads for that cluster in a sample.\r\n\r\n```bash\r\nlederhosen otu_table \\\r\n  --files=clusters_95.uc \\\r\n  --prefix=otu_table \\\r\n  --levels=domain phylum class order family genus species\r\n```\r\n\r\nThis will create the files:\r\n\r\n    otu_table.domain.csv, ..., otu_table.species.csv\r\n\r\n### Get representative sequences\r\n\r\nYou can get the representative sequences for each cluster using the `get_reps` tasks. This will extract the representative sequence from\r\nthe __database__ you ran usearch with. Make sure you use the same database that you used when running usearch.\r\n\r\n```bash\r\nlederhosen get_reps \\\r\n  --input=clusters.uc \\\r\n  --database=taxcollector.fa \\\r\n  --output=representatives.fasta\r\n```\r\n\r\nYou can get the representatives from more than one cluster file using a glob:\r\n\r\n```bash\r\nlederhosen get_reps \\\r\n  --input=*.uc \\\r\n  --database=taxcollector.fa \\\r\n  --output=representatives.fasta\r\n```\r\n\r\n## Acknowledgements\r\n\r\n- Lexi, Vinnie and Kevin for beta-testing and putting up with bugs\r\n- The QIIME project for inspiration\r\n- Sinbad Richardson for the Lederhosen Guy artwork\r\n\r\n## Please Cite\r\n\r\nPlease cite this GitHub repo (https://github.com/audy/lederhosen) with the version you used (type `lederhosen version`) unless I publish a paper. Then cite that.\r\n","tagline":"Cluster raw Illumina 16S rRNA amplicon data to generate OTUs.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}